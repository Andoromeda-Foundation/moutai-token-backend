swagger: '2.0'
info:
  title: moutai-token
  description: moutai-token
  version: 0.0.1
host: 47.75.74.227:8080
basePath: /api
schemes:
  # - https
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: token
  ConsoleKeyHeader:
    type: apiKey
    in: header
    name: console-token
paths:
  /keyValues/{key}:
    get:
      summary: 获取静态参数
      description: 返回的result中，字段value的值为一个object。
      x-oai-controller:
        - file: keyValue
          handler: getKeyValue
      parameters:
        - in: path
          name: key
          type: string
          required: true
          description: 请求的key值
      responses:
        '200':
          description: 返回查找的keyValue
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/keyValue'
  /sendValidatePhoneSMS:
    post:
      summary: 发送验证短信
      description:
        1. 发送验证短信，用户注册、修改绑定手机前调用，目前验证码都是1234
        2. type为register、forgetPassword、login，后两者会校验账号是否注册过
      x-oai-controller:
        - file: user
          handler: sendValidatePhoneSMS
      parameters:
          - in: body
            name: body
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                type:
                  type: string
      responses:
        200:
          description: 发送成功
          schema:
            type: object
            properties:
              statusCode:
                type: integer
  /register:
    post:
      summary: 用户注册
      description:
        1.用户注册
        2. 测试阶段邀请码可以为任意值
        3. 测试阶段每人账户里10000元
      x-oai-controller:
        - file: login
          handler: register
      parameters:
          - in: body
            name: body
            schema:
              type: object
              required:
                - nickname
                - phone
                - password
                - phoneVerificationCode
                - invitationCode
              properties:
                nickname:
                  type: string
                phone:
                  type: string
                password:
                  type: string
                phoneVerificationCode:
                  type: string
                invitationCode:
                  type: string
      responses:
        200:
          description: 注册成功，返回用户信息
          headers:
            token:
              type: string
              description: 用户在线状态token，登录后所有请求都应在header中加上此token。用户退出或在其他设备登录后，此token自动失效。
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
  /forgetPassword:
    post:
      summary: 重置密码
      description: 重置密码
      x-oai-controller:
        - file: login
          handler: forgetPassword
      parameters:
          - in: body
            name: body
            schema:
              type: object
              required:
                - phone
                - password
                - phoneVerificationCode
              properties:
                phone:
                  type: string
                password:
                  type: string
                phoneVerificationCode:
                  type: string
      responses:
        200:
          description: 重置成功，返回用户信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
  /loginByPassword:
    post:
      summary: 用户登录
      x-oai-controller:
        - file: login
          handler: loginByPassword
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - phone
              - password
            properties:
              phone:
                type: string
              password:
                type: string
      responses:
        '200':
          description: 返回登录的用户的信息
          headers:
            token:
              type: string
              description: 用户的token，登录后所有请求都应在header中加上此token。用户退出或在其他设备登录后，此token自动失效。
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
  /loginByPhoneVerificationCode:
    post:
      summary: 用户登录
      x-oai-controller:
        - file: login
          handler: loginByPhoneVerificationCode
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - phone
              - phoneVerificationCode
            properties:
              phone:
                type: string
              phoneVerificationCode:
                type: string
      responses:
        '200':
          description: 返回登录的用户的信息
          headers:
            token:
              type: string
              description: 用户的token，登录后所有请求都应在header中加上此token。用户退出或在其他设备登录后，此token自动失效。
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
  /logout:
    post:
      summary: 用户登出
      x-oai-controller:
        - file: login
          handler: logout
      security:
        - APIKeyHeader: []
      responses:
        '200':
          description: 登出成功，用户token失效
  /users/{id}:
    get:
      summary: 获取某个用户的信息
      description: 通过此接口，只能获取到用户的可公开信息
      x-oai-controller:
        - file: user
          handler: getUserById
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 用户id
      responses:
        '200':
          description: 返回查找的用户的信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
  /user:
    get:
      summary: 获取当前登录用户的信息
      x-oai-controller:
        - file: user
          handler: getCurrentUser
      security:
        - APIKeyHeader: []
      responses:
        '200':
          description: 返回当前登录用户的信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
    patch:
      summary: 更新当前用户某一字段信息
      description: >-
        1. 更新当前用户某一字段信息，可更新字段：
          'nickname', 'oldPassword', 'newPassword', 'bio', 'phone'
        2. request中可以只包含需要更新的字段，不需要包含所有字段信息。
        3. 当更新密码时，newPassword和oldPassword必须同时出现。
        4. 更新phone时，要带着phoneVerificationCode
      x-oai-controller:
        - file: user
          handler: updateUser
      security:
        - APIKeyHeader: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              nickname:
                type: string
              oldPassword:
                type: string
              newPassword:
                type: string
              bio:
                type: string
              phone:
                type: string
              phoneVerificationCode:
                type: string
      responses:
        '200':
          description: 更新成功，并返回更新成功后的用户信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/user'
  /user/deposit:
    post:
      summary: 充值
      description: 充值
      x-oai-controller:
        - file: pay
          handler: deposit
      security:
        - APIKeyHeader: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              amount:
                type: integer
              openId:
                type: string
      responses:
        '200':
          description: 充值成功返回前端需要的调用内容
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                type: object
                properties:
                  appId:
                    type: string
                  timeStamp:
                    type: string
                  nonceStr:
                    type: string
                  package:
                    type: string
                  signType:
                    type: string
                  paySign:
                    type: string
  /spirits:
    get:
      summary: 获取所有挂单中的酒
      description:
        1. 获取所有挂单中的酒
        2. 可以输入'status', 'brand', 'region', 'time', 'degree', 'specification'作为筛选条件
      x-oai-controller:
        - file: spirit
          handler: getSpirits
      parameters:
        - in: query
          name: limit
          type: integer
          description: 限制返回的limit，默认为50，最大值为50
        - in: query
          name: offset
          type: integer
          description: 限制返回的offset， 默认为0
        - in: query
          name: status
          type: string
          description: status默认为sale
        - in: query
          name: brand
          type: string
          description: 品牌
        - in: query
          name: region
          type: string
          description: 产地
        - in: query
          name: time
          type: string
          description: 生产年份
        - in: query
          name: degree
          type: string
          description: 度数
        - in: query
          name: specification
          type: string
          description: 规格
      responses:
        '200':
          description: 返回spirit列表，返回体中的count是spirit总数
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              count:
                type: integer
              result:
                $ref: '#/definitions/spirits'
  /user/spirits:
    get:
      summary: 获取我的酒
      description:
        1. 获取我的酒
        2. 可以输入'status', 'brand', 'region', 'time', 'degree', 'specification'作为筛选条件
      x-oai-controller:
        - file: spirit
          handler: getUserSpirits
      security:
        - APIKeyHeader: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: 限制返回的limit，默认为50，最大值为50
        - in: query
          name: offset
          type: integer
          description: 限制返回的offset， 默认为0
        - in: query
          name: status
          type: string
          description: status为normal或sale
        - in: query
          name: brand
          type: string
          description: 品牌
        - in: query
          name: region
          type: string
          description: 产地
        - in: query
          name: time
          type: string
          description: 生产年份
        - in: query
          name: degree
          type: string
          description: 度数
        - in: query
          name: specification
          type: string
          description: 规格
      responses:
        '200':
          description: 返回spirit列表，返回体中的count是spirit总数
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              count:
                type: integer
              result:
                $ref: '#/definitions/spirits'
  /spirits/{id}:
    get:
      summary: 获取一瓶酒信息
      x-oai-controller:
        - file: spirit
          handler: getSpiritById
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
      responses:
        '200':
          description: 返回一瓶酒酒的信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/spirit'
    patch:
      summary: 更新酒状态
      description: 只能修改自己的酒，可修改
        1. 状态，在normal（下架）和sale（挂单）中切换
        2. nextPrice 挂单价，需要为正数，可以小于买入价
      security:
        - APIKeyHeader: []
      x-oai-controller:
        - file: spirit
          handler: updateSpirit
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
              nextPrice:
                type: number
      responses:
        '200':
          description: 返回一瓶酒酒的信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/spirit'
  /spirits/{id}/buy:
    post:
      summary: 购买一瓶酒
      security:
        - APIKeyHeader: []
      x-oai-controller:
        - file: spirit
          handler: buy
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
        - in: body
          name: body
          schema:
            type: object
            properties:
              price:
                type: number
      responses:
        '200':
          description: 购买成功，返回酒的信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/spirit'
  /user/transactions:
    get:
      summary: 获取用户的所有充值提现
      description:
        1. 获取用户的所有充值提现
        2. 通过limit和offset控制数量
      x-oai-controller:
        - file: transaction
          handler: getUsertransactions
      security:
        - APIKeyHeader: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: 限制返回的limit
        - in: query
          name: offset
          type: integer
          description: 限制返回的offset
      responses:
        '200':
          description: 返回用户的交易历史
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              count:
                type: integer
              result:
                $ref: '#/definitions/transactions'
  /spirits/{id}/trades:
    get:
      summary: 获取一瓶酒的所有交易记录
      description: 获取一瓶酒的所有交易记录，按时间倒序
      x-oai-controller:
        - file: trade
          handler: getSpiritTrades
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
      responses:
        '200':
          description: 返回酒的交易历史
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/trades'
  /spirits/{id}/news:
    get:
      summary: 获取一瓶酒的新闻
      description: 获取一瓶酒的新闻，按时间倒序
      x-oai-controller:
        - file: news
          handler: getSpiritNewsById
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
      responses:
        '200':
          description: 返回酒的所有所有新闻
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/newsArray'
  /spirits/{id}/message:
    get:
      summary: 获取一瓶酒的所有评论
      description: 获取一瓶酒的所有评论，按时间正序
      x-oai-controller:
        - file: message
          handler: getSpiritMessageById
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
      responses:
        '200':
          description: 返回酒的所有所有评论
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/messages'
    post:
      summary: 发表评论
      security:
        - APIKeyHeader: []
      x-oai-controller:
        - file: message
          handler: comment
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 酒id
        - in: body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
      responses:
        '200':
          description: 评论成功，返回评论信息
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              result:
                $ref: '#/definitions/message'
  /user/trades:
    get:
      summary: 获取用户的所有交易记录
      description:
        1. 获取用户的所有交易记录，可以根据指定spiritId来进行筛选
        2. 通过limit和offset控制数量
        3. 按时间倒序
      x-oai-controller:
        - file: trade
          handler: getUserTrades
      security:
        - APIKeyHeader: []
      parameters:
        - in: query
          name: limit
          type: integer
          description: 限制返回的limit
        - in: query
          name: offset
          type: integer
          description: 限制返回的offset
        - in: query
          name: spiritId
          type: string
          description: 酒类编号
      responses:
        '200':
          description: 返回用户的交易历史
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              count:
                type: integer
              result:
                $ref: '#/definitions/trades'

definitions:
  user:
    type: object
    properties:
      id:
        type: integer
      nickname:
        type: string
      phone:
        type: string
      bio:
        type: string
      assetCount:
        type: integer
      assetValue:
        type: number
      verifiedStatus:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  users:
    type: array
    items:
      $ref: '#/definitions/user'
  spirit:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      status:
        type: string
      coverFile:
        type: string
      coverFileDownloadUrl:
        type: string
      brand:
        type: string
      region:
        type: string
      time:
        type: integer
      degree:
        type: string
      specification:
        type: string
      currentPrice:
        type: number
      nextPrice:
        type: number
      freezeTo:
        type: string
      description:
        type: string
      history:
        type: array
        items:
          type: object
      userId:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  spirits:
    type: array
    items:
      $ref: '#/definitions/spirit'
  keyValue:
    type: object
    properties:
      key:
        type: string
      value:
        type: object
      createdAt:
        type: string
      updatedAt:
        type: string
  keyValues:
    type: array
    items:
      $ref: '#/definitions/keyValue'
  notification:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      status:
        type: string
      content:
        type: string
      userId:
        type: integer
      parameters:
        type: object
      createdAt:
        type: string
      updatedAt:
        type: string
  notifications:
    type: array
    items:
      $ref: '#/definitions/notification'
  trade:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      amount:
        type: number
      comment:
        type: string
      fromUserId:
        type: integer
      toUserId:
        type: integer
      spiritId:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string
  trades:
    type: array
    items:
      $ref: '#/definitions/trade'
  delivery:
    type: object
    properties:
      id:
        type: integer
      address:
        type: string
      spiritId:
        type: integer
      userId:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string
  deliveries:
    type: array
    items:
      $ref: '#/definitions/delivery'
  transaction:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      amount:
        type: number
      description:
        type: string
      comment:
        type: string
      userId:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string
  transactions:
    type: array
    items:
      $ref: '#/definitions/transaction'
  message:
    type: object
    properties:
      id:
        type: integer
      content:
        type: string
      spiritId:
        type: integer
      userId:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string
  messages:
    type: array
    items:
      $ref: '#/definitions/message'
  news:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      url:
        type: string
      spiritId:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string
  newsArray:
    type: array
    items:
      $ref: '#/definitions/news'
